{"version":3,"sources":["api.js","Filters.js","Character.js","App.js","serviceWorker.js","index.js"],"names":["getData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","data","wrap","_context","prev","next","fetch","sent","json","abrupt","t0","console","log","stop","apply","this","arguments","Filters","props","react_default","createElement","className","onChange","event","handleFilter","name","type","placeholder","value","onClick","handleSorting","Character","src","character","image","alt","gender","species","location","App","state","originalList","listToRender","filteringOptions","searchInList","list","option","filter","listItem","toLowerCase","includes","sortingList","preventDefault","_this","typeOfSorting","target","sortedList","sort","i","j","localeCompare","setState","filterList","generateFilteredList","filterOptions","keys","forEach","filterOption","performFiltering","results","Fragment","src_Filters_0","map","src_Character","key","id","Component","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.47f12138.chunk.js","sourcesContent":["const url = \"https://rickandmortyapi.com/api/character/\";\n\nlet getData = async () => {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport default getData;\n","import React from \"react\";\nimport \"./Filters.css\";\n\nconst Filters = props => {\n  return (\n    <div className=\"filters-wrapper\">\n      <form\n        onChange={event => {\n          props.handleFilter(event);\n        }}\n      >\n        <div className=\"filters\">\n          <input\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Search by Name\"\n            className=\"input-field\"\n          />\n          <div className=\"input-group\">\n            Gender\n            <select name=\"gender\">\n              <option value=\"all\">All</option>\n              <option value=\"male\">Male</option>\n              <option value=\"female\">Female</option>\n              <option value=\"unknown\">Unknown</option>\n            </select>\n          </div>\n          <div className=\"input-group\">\n            Species\n            <select name=\"species\">\n              <option value=\"all\">All</option>\n              <option value=\"human\">Human</option>\n              <option value=\"alien\">Alien</option>\n              <option value=\"unknown\">Unknown</option>\n            </select>\n          </div>\n          <div className=\"input-group\">\n            Location\n            <select name=\"location\">\n              <option value=\"all\">All</option>\n              <option value=\"Earth (Replacement Dimension)\">\n                Earth (Replacement Dimension)\n              </option>\n              <option value=\"Anatomy Park\">Anatomy Park</option>\n              <option value=\"Citadel of Ricks\">Citadel of Ricks</option>\n              <option value=\"Interdimensional Cable\">\n                Interdimensional Cable\n              </option>\n              <option value=\"unknown\">unknown</option>\n            </select>\n          </div>\n          <div className=\"sorting\">\n            <button onClick={props.handleSorting} name=\"sort-name-acs\">\n              Sort by Name ASC\n            </button>\n            <button onClick={props.handleSorting} name=\"sort-name-desc\">\n              Sort by Name DESC\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\nexport default Filters;\n","import React from \"react\";\n\nconst Character = props => {\n  return (\n    <div className=\"card\">\n      <div className=\"card__image\">\n        <img src={props.character.image} alt=\"rick\" />\n      </div>\n      <div className=\"card__info\">\n        <div className=\"card__info-row\">Name: {props.character.name}</div>\n        <div className=\"card__info-row\">Gender: {props.character.gender}</div>\n        <div className=\"card__info-row\">Species: {props.character.species}</div>\n        <div className=\"card__info-row\">\n          Location: {props.character.location.name}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Character;\n","import React, { Component } from \"react\";\nimport getData from \"./api\";\nimport \"./App.css\";\nimport Filters from \"./Filters\";\nimport Character from \"./Character\";\n\nclass App extends Component {\n  state = {\n    originalList: [],\n    listToRender: [],\n    filteringOptions: {}\n  };\n\n  async componentDidMount() {\n    let data = await getData();\n    this.setState({\n      originalList: data.results,\n      listToRender: data.results\n    });\n  }\n\n  searchInList = (list, option, value) => {\n    console.log(list, option, value);\n    const result = list.filter(listItem => {\n      return listItem[option].toLowerCase().includes(value.toLowerCase());\n    });\n    return result;\n  };\n\n  sortingList = event => {\n    event.preventDefault();\n    const { listToRender } = this.state;\n    const typeOfSorting = event.target.name;\n    const sortedList = listToRender.sort((i, j) => {\n      return typeOfSorting === \"sort-name-acs\"\n        ? i.name.localeCompare(j.name)\n        : j.name.localeCompare(i.name);\n    });\n    this.setState({ listToRender: sortedList });\n  };\n\n  filterList = (list, option, value) => {\n    let result;\n    if (value === \"all\") {\n      result = list;\n    } else {\n      result = list.filter(listItem => {\n        const filteringOption =\n          option === \"location\" ? listItem[option].name : listItem[option];\n        return filteringOption.toLowerCase() === value.toLowerCase();\n      });\n    }\n    return result;\n  };\n\n  generateFilteredList = filterOptions => {\n    let { originalList } = this.state;\n    Object.keys(filterOptions).forEach(filterOption => {\n      if (filterOption === \"name\") {\n        originalList = this.searchInList(\n          originalList,\n          filterOption,\n          filterOptions[filterOption]\n        );\n      } else {\n        originalList = this.filterList(\n          originalList,\n          filterOption,\n          filterOptions[filterOption]\n        );\n      }\n    });\n    return originalList;\n  };\n\n  performFiltering = event => {\n    const { target } = event;\n    const { filteringOptions } = this.state;\n    filteringOptions[target.name] = target.value;\n    this.setState({\n      listToRender: this.generateFilteredList(filteringOptions),\n      filteringOptions\n    });\n  };\n\n  render() {\n    const { listToRender } = this.state;\n    return (\n      <>\n        <Filters\n          handleFilter={this.performFiltering}\n          handleSorting={this.sortingList}\n        />\n        <div className=\"card-wrapper\">\n          {listToRender.map(character => {\n            return <Character key={character.id} character={character} />;\n          })}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}